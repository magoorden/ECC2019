uncontrollable cod_er;
uncontrollable cod_ser;
controllable inc_ctr_WSP;
controllable reset_ctr_WSP;
uncontrollable ctr_ge_max_WSP;
uncontrollable ctr_lt_max_WSP;
controllable MER_an_FT;
controllable MER_an_BT;
controllable MER_an_HT;
controllable MER_aus_FT;
controllable MER_aus_BT;
controllable MER_aus_HT;
controllable MVR_an_HT;
controllable MVR_aus_HT;
controllable MVR_an_FT;
controllable MVR_an_BT;
controllable MVR_aus_FT;
controllable MVR_aus_BT;
uncontrollable STZV_FT;
uncontrollable STZV_BT;
controllable MZS_an_HT;
controllable MZS_aus_HT;
controllable time_WSP;
controllable time_FS;
controllable reset_WSP;
controllable reset_FS;
uncontrollable timeout_WSP;
uncontrollable timeout_FS;
uncontrollable tuer_zu_FT;
uncontrollable tuer_zu_BT;
uncontrollable tuer_zu_HT;
uncontrollable tuer_auf_FT;
uncontrollable tuer_auf_BT;
uncontrollable tuer_auf_HT;
controllable time_W_FT;
controllable time_ER_FT;
controllable time_VR_FT;
controllable time_ZS_FT;
controllable reset_FT;
controllable time_W_BT;
controllable time_ER_BT;
controllable time_VR_BT;
controllable time_ZS_BT;
controllable reset_BT;
controllable time_W_HT;
controllable time_ER_HT;
controllable time_VR_HT;
controllable time_ZS_HT;
controllable reset_HT;
uncontrollable timeout_FT;
uncontrollable timeout_BT;
uncontrollable timeout_HT;
uncontrollable zuendung_an;
uncontrollable zuendung_aus;
controllable soft_ER;
controllable soft_SER_FT;
controllable SERFS;
controllable soft_CS;
controllable ER;
controllable SER;
controllable ZS;
controllable TAST;
controllable wsp;
controllable soft_VR;
controllable soft_ZS;
controllable autom_VR;
controllable is_cod_er;
controllable is_cod_ser;
controllable done_ZS;
controllable CS_ok;
uncontrollable CS;
controllable ZSA;
controllable ZSI;
uncontrollable ER_FT;
uncontrollable ER_BT;
uncontrollable ER_HK;
uncontrollable ER_FS;
uncontrollable VR_FT;
uncontrollable VR_BT;
uncontrollable VR_HK;
uncontrollable VR_FS;
uncontrollable TASTVR;
controllable kein_ZS;
controllable start_ER_FT;
controllable stop_ER_FT;
controllable done_ER;
controllable done_SER_FT;
controllable start_VR_FT;
controllable stop_VR_FT;
controllable done_VR;
controllable start_ZS_FT;
controllable stop_ZS_FT;
controllable sync_FT;
controllable async_FT;
controllable start_ER_BT;
controllable stop_ER_BT;
controllable start_VR_BT;
controllable stop_VR_BT;
controllable start_ZS_BT;
controllable stop_ZS_BT;
controllable sync_BT;
controllable async_BT;
controllable start_ER_HT;
controllable stop_ER_HT;
controllable start_VR_HT;
controllable stop_VR_HT;
controllable start_ZS_HT;
controllable stop_ZS_HT;
controllable sync_HT;
controllable async_HT;
plant automaton Ircount_WSP:
  location IN:
    initial;
    marked;
    edge inc_ctr_WSP goto RUN;
    edge reset_ctr_WSP;
  location RUN:
    edge ctr_lt_max_WSP, ctr_ge_max_WSP goto IN;
end
plant automaton timer_WSP:
  location IDLE:
    initial;
    marked;
    edge time_WSP goto RUN;
  location RUN:
    edge reset_WSP, timeout_WSP goto IDLE;
end
plant automaton timer_FS:
  location IDLE:
    initial;
    marked;
    edge time_FS goto RUN;
  location RUN:
    edge reset_FS, timeout_FS goto IDLE;
end
plant automaton tklemme_FT:
  location AUF:
    initial;
    edge tuer_zu_FT goto ZU;
  location ZU:
    marked;
    edge tuer_auf_FT goto AUF;
end
plant automaton tklemme_BT:
  location AUF:
    initial;
    edge tuer_zu_BT goto ZU;
  location ZU:
    marked;
    edge tuer_auf_BT goto AUF;
end
plant automaton tklemme_HT:
  location AUF:
    initial;
    edge tuer_zu_HT goto ZU;
  location ZU:
    marked;
    edge tuer_auf_HT goto AUF;
end
plant automaton P1:
  location:
    initial;
    marked;
    edge soft_ER;
end
plant automaton P2:
  location:
    initial;
    marked;
    edge soft_SER_FT;
end
plant automaton P3:
  location:
    initial;
    marked;
    edge SERFS;
end
plant automaton P4:
  location:
    initial;
    marked;
    edge soft_CS;
end
plant automaton P5:
  location:
    initial;
    marked;
    edge ER;
end
plant automaton P6:
  location:
    initial;
    marked;
    edge SER;
end
plant automaton P7:
  location:
    initial;
    marked;
    edge ZS;
end
plant automaton P8:
  location:
    initial;
    marked;
    edge TAST;
end
plant automaton P9:
  location:
    initial;
    marked;
    edge wsp;
end
plant automaton P10:
  location:
    initial;
    marked;
    edge soft_VR;
end
plant automaton P11:
  location:
    initial;
    marked;
    edge soft_ZS;
end
plant automaton P12:
  location:
    initial;
    marked;
    edge autom_VR;
end
supervisor automaton automvr:
  location VR:
    initial;
    marked;
    edge soft_ER, soft_SER_FT goto lER;
    edge SERFS goto FS;
    edge soft_CS, tuer_auf_BT, tuer_auf_FT, tuer_auf_HT goto lER;
    edge ER, SER, ZS, TAST, wsp, soft_VR, soft_ZS, reset_FS, timeout_FS;
  location lER:
    marked;
    edge soft_VR, soft_ZS goto VR;
    edge soft_CS, tuer_auf_BT, tuer_auf_FT, tuer_auf_HT goto lER;
    edge ER, SER, ZS, TAST, wsp, soft_ER, soft_SER_FT, reset_FS, timeout_FS;
  location FS:
    edge wsp, ER, SER, ZS, TAST goto VR;
    edge soft_CS, tuer_auf_BT, tuer_auf_FT, tuer_auf_HT goto lER;
    edge soft_ER, soft_SER_FT goto AU1;
    edge reset_FS, timeout_FS;
  location AU1:
    edge time_FS goto AU2;
    edge ER, SER, ZS, TAST goto lER;
    edge soft_CS, tuer_auf_BT, tuer_auf_FT, tuer_auf_HT goto lER;
    edge SERFS, reset_FS, timeout_FS;
  location AU2:
    edge timeout_FS goto AU3;
    edge ER, SER, ZS, TAST goto lER;
    edge soft_CS, tuer_auf_BT, tuer_auf_FT, tuer_auf_HT goto lER;
    edge SERFS;
  location AU3:
    edge autom_VR goto VR;
    edge ER, SER, ZS, TAST goto lER;
    edge soft_CS, tuer_auf_BT, tuer_auf_FT, tuer_auf_HT goto lER;
    edge SERFS;
end
supervisor automaton wspcount:
  location COOL:
    initial;
    marked;
    edge ER, SER, SERFS, ZS, TAST, autom_VR goto CNT;
    edge ctr_ge_max_WSP, ctr_lt_max_WSP, timeout_WSP;
  location CNT:
    edge timeout_WSP goto COOL;
    edge inc_ctr_WSP goto TST;
    edge ctr_ge_max_WSP, ctr_lt_max_WSP;
  location TST:
    edge ctr_lt_max_WSP, timeout_WSP goto COOL;
    edge ctr_ge_max_WSP goto WSP;
  location WSP:
    edge timeout_WSP goto COOL;
    edge wsp;
end
supervisor automaton sup2:
  alphabet inc_ctr_WSP, reset_ctr_WSP, time_WSP, reset_WSP, time_FS, reset_FS, soft_ER, soft_SER_FT, SERFS, soft_CS, ER, SER, ZS, TAST, wsp, soft_VR, soft_ZS, autom_VR;
  location:
    initial;
    marked;
    edge autom_VR when true;
    edge ER when true;
    edge inc_ctr_WSP when true;
    edge reset_ctr_WSP when true;
    edge reset_FS when true;
    edge reset_WSP when true;
    edge SER when true;
    edge SERFS when true;
    edge soft_CS when true;
    edge soft_ER when true;
    edge soft_SER_FT when true;
    edge soft_VR when true;
    edge soft_ZS when true;
    edge TAST when true;
    edge time_FS when true;
    edge time_WSP when true;
    edge wsp when true;
    edge ZS when true;
end
